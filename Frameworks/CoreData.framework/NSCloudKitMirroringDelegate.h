/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CoreData.framework/CoreData
 */

@interface NSCloudKitMirroringDelegate : NSObject <NSPersistentStoreMirroringDelegate> {
    NSString * _ckDatabaseName;
    NSObject<OS_dispatch_queue> * _cloudKitQueue;
    NSObject<OS_dispatch_semaphore> * _cloudKitQueueSemaphore;
    CKContainer * _container;
    CKDatabase * _database;
    bool  _hadObservedStore;
    NSURL * _largeBlobDirectoryURL;
    NSError * _lastInitializationError;
    NSPersistentStoreCoordinator * _observedCoordinator;
    NSSQLCore * _observedStore;
    NSCloudKitMirroringDelegateOptions * _options;
    CKRecordZone * _zone;
    CKRecordZoneSubscription * _zoneSubscription;
}

@property (nonatomic, readonly) NSString *ckDatabaseName;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *cloudKitQueue;
@property (nonatomic, readonly) NSObject<OS_dispatch_semaphore> *cloudKitQueueSemaphore;
@property (nonatomic, readonly) CKContainer *container;
@property (nonatomic, readonly) CKDatabase *database;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) bool hadObservedStore;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSURL *largeBlobDirectoryURL;
@property (nonatomic, readonly) NSError *lastInitializationError;
@property (nonatomic, readonly) NSPersistentStoreCoordinator *observedCoordinator;
@property (nonatomic, readonly) NSPersistentStore *observedStore;
@property (nonatomic, readonly, copy) NSCloudKitMirroringDelegateOptions *options;
@property (readonly) Class superclass;
@property (nonatomic, readonly) CKRecordZone *zone;
@property (nonatomic, readonly) CKRecordZoneSubscription *zoneSubscription;

+ (void)initialize;

- (void).cxx_destruct;
- (void)_beginWatchingForChanges;
- (void)_openTransactionWithLabel:(id)arg1 andExecuteWorkBlock:(id /* block */)arg2;
- (void)_setContainer:(id)arg1;
- (void)_setDatabase:(id)arg1;
- (void)_setObservedStore:(id)arg1 observedCoordinator:(id)arg2;
- (void)_setUpCloudKitIntegration;
- (id)_writeLargeData:(id)arg1 forUID:(id)arg2 error:(id*)arg3;
- (void)checkForNewChanges;
- (id)ckDatabaseName;
- (id)cloudKitQueue;
- (id)cloudKitQueueSemaphore;
- (id)container;
- (void)coordinatorWillRemoveStore:(id)arg1;
- (id)database;
- (void)dealloc;
- (void)fetchChangesAndUpdateObservedStore;
- (bool)hadObservedStore;
- (id)init;
- (id)initWithOptions:(id)arg1;
- (bool)isPrivateContextSave:(id)arg1;
- (id)largeBlobDirectoryURL;
- (id)lastInitializationError;
- (void)logMessage:(id)arg1;
- (void)managedObjectContextDidSave:(id)arg1;
- (void)observeChangesForStore:(id)arg1 inPersistentStoreCoordinator:(id)arg2;
- (id)observedCoordinator;
- (id)observedStore;
- (id)options;
- (void)persistentStoreCoordinator:(id)arg1 didSuccessfullyAddPersistentStore:(id)arg2 withDescription:(id)arg3;
- (bool)pruneExternalAssetFileAtURL:(id)arg1 error:(id*)arg2;
- (void)recoverFromError:(id)arg1;
- (void)storesDidChange:(id)arg1;
- (void)tearDown;
- (bool)validateManagedObjectModel:(id)arg1 forUseWithStoreWithDescription:(id)arg2 error:(id*)arg3;
- (bool)wipeAllCloudDataAndPurgeHistoryToken:(bool)arg1 error:(id*)arg2;
- (id)zone;
- (id)zoneSubscription;

@end
