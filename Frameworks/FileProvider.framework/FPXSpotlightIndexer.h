/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/FileProvider.framework/FileProvider
 */

@interface FPXSpotlightIndexer : NSObject <CSSearchableIndexDelegate> {
    unsigned long long  _clientState;
    FPXDomainContext * _context;
    CSSearchableIndex * _index;
    NSString * _indexName;
    bool  _initialIndexingDone;
    bool  _isCanceled;
    bool  _isIndexingExtension;
    NSData * _lastIndexState;
    NSOperationQueue * _operationQueue;
    NSString * _providerIdentifier;
    NSObject<OS_dispatch_queue> * _queue;
}

@property (nonatomic, readonly) FPXDomainContext *context;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) CSSearchableIndex *index;
@property (nonatomic, readonly) NSData *lastIndexState;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *queue;
@property (readonly) Class superclass;

+ (id)_currentIndexerVersion;

- (void).cxx_destruct;
- (bool)_clientStateResetNeeded;
- (void)_dropIndexWithCompletionHandler:(id /* block */)arg1;
- (void)_fetchClientStateIfNeeded;
- (bool)_isInInitialIndexing;
- (void)_markClientStateResetDone;
- (void)_readyForIndexingWithAckedIndexState:(id)arg1;
- (id)context;
- (void)deleteSearchableItemsWithDomainIdentifiers:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)description;
- (void)dropIndexWithCompletionHandler:(id /* block */)arg1;
- (void)dumpStateTo:(id)arg1;
- (id)index;
- (void)indexExtension;
- (void)indexExtensionWithCompletionHandler:(id /* block */)arg1;
- (void)indexItem:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)initWithIndexName:(id)arg1 context:(id)arg2;
- (void)invalidate;
- (id)lastIndexState;
- (void)markInitialIndexingDoneIfNeeded;
- (id)queue;
- (void)searchableIndex:(id)arg1 reindexAllSearchableItemsWithAcknowledgementHandler:(id /* block */)arg2;
- (void)searchableIndex:(id)arg1 reindexSearchableItemsWithIdentifiers:(id)arg2 acknowledgementHandler:(id /* block */)arg3;
- (bool)shouldSwizzleLastUsedDate;

@end
