/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AVKit.framework/AVKit
 */

@interface AVPlaybackControlsController : NSObject <AVPlayerViewControllerContentViewDelegate, AVRoutePickerContainerViewControllerDelegate, AVTransportControlsViewDelegate, MPVolumeControllerDelegate> {
    id  _AVSystemControllerCurrentRouteHasVolumeControlDidChangeObserver;
    id  _MPVolumeViewRoutePickerPresentedNotificationObserver;
    id  _MPVolumeViewWirelessRoutesAvailableDidChangeNotificationObserver;
    bool  _canExcludeProminentPlayButton;
    bool  _canHideInteractiveContentOverlayView;
    bool  _coveringWindow;
    AVTimeFormatter * _elapsedTimeFormatter;
    bool  _entersFullScreenWhenPlaybackBegins;
    float  _estimatedFrameRate;
    bool  _hasPlaybackBegun;
    bool  _hasPlaybackBegunSinceEnteringInline;
    bool  _hasSeekableLiveStreamingContent;
    AVKeyValueObservationController * _keyValueObservationController;
    NSArray * _loadedTimeRanges;
    bool  _pickedRouteHasVolumeControl;
    AVPictureInPictureController * _pictureInPictureController;
    AVPlaybackControlsView * _playbackControlsView;
    AVPlayerController * _playerController;
    AVPlayerViewController * _playerViewController;
    bool  _playerViewControllerHasInvalidViewControllerHierarchy;
    bool  _playerViewControllerIsPresentedFullScreen;
    bool  _playerViewControllerIsPresentingFullScreen;
    long long  _preferredUnobscuredArea;
    AVTimeFormatter * _remainingTimeFormatter;
    bool  _requiresLinearPlayback;
    UIAlertController * _routePickerAlertController;
    bool  _scrubberEnabled;
    bool  _showsFullScreenButton;
    bool  _showsLoadingIndicator;
    bool  _showsPictureInPictureButton;
    bool  _showsPlaybackControls;
    bool  _showsVolumeSlider;
    bool  _suspended;
    AVPlayerControllerTimeResolver * _timeResolver;
    MPVolumeController * _volumeController;
}

@property (nonatomic, retain) id AVSystemControllerCurrentRouteHasVolumeControlDidChangeObserver;
@property (nonatomic, retain) id MPVolumeViewRoutePickerPresentedNotificationObserver;
@property (nonatomic, retain) id MPVolumeViewWirelessRoutesAvailableDidChangeNotificationObserver;
@property (nonatomic, readonly) bool actuallyCanSeek;
@property (nonatomic) bool canExcludeProminentPlayButton;
@property (nonatomic) bool canHideInteractiveContentOverlayView;
@property (getter=isCoveringWindow, nonatomic) bool coveringWindow;
@property (nonatomic, readonly) double currentTime;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) AVTimeFormatter *elapsedTimeFormatter;
@property (nonatomic) bool entersFullScreenWhenPlaybackBegins;
@property (nonatomic) float estimatedFrameRate;
@property (getter=isFullScreen, nonatomic, readonly) bool fullScreen;
@property (nonatomic) bool hasPlaybackBegun;
@property (nonatomic) bool hasPlaybackBegunSinceEnteringInline;
@property (nonatomic) bool hasSeekableLiveStreamingContent;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool includesFullScreenButton;
@property (nonatomic, readonly) AVKeyValueObservationController *keyValueObservationController;
@property (nonatomic, copy) NSArray *loadedTimeRanges;
@property (nonatomic, readonly) double maximumTime;
@property (nonatomic, readonly) double minimumTime;
@property (nonatomic) bool pickedRouteHasVolumeControl;
@property (nonatomic, retain) AVPictureInPictureController *pictureInPictureController;
@property (nonatomic, retain) AVPlaybackControlsView *playbackControlsView;
@property (nonatomic) AVPlayerController *playerController;
@property (nonatomic, readonly) AVPlayerViewController *playerViewController;
@property (nonatomic) bool playerViewControllerHasInvalidViewControllerHierarchy;
@property (nonatomic) bool playerViewControllerIsPresentedFullScreen;
@property (nonatomic) bool playerViewControllerIsPresentingFullScreen;
@property (nonatomic) long long preferredUnobscuredArea;
@property (nonatomic, readonly) bool prominentPlayButtonCanShowPauseGlyph;
@property (nonatomic, readonly) AVTimeFormatter *remainingTimeFormatter;
@property (nonatomic) bool requiresLinearPlayback;
@property (nonatomic) UIAlertController *routePickerAlertController;
@property (getter=isScrubberEnabled, nonatomic) bool scrubberEnabled;
@property (nonatomic, readonly) bool shouldEnterFullScreenWhenPlaybackBegins;
@property (nonatomic) bool showsFullScreenButton;
@property (nonatomic) bool showsLoadingIndicator;
@property (nonatomic, readonly) bool showsMediaSelectionButton;
@property (nonatomic) bool showsPictureInPictureButton;
@property (nonatomic) bool showsPlaybackControls;
@property (nonatomic, readonly) bool showsProminentPlayButton;
@property (nonatomic, readonly) bool showsRoutePickerButton;
@property (nonatomic, readonly) bool showsSkipButtons;
@property (nonatomic, readonly) bool showsTransportControls;
@property (nonatomic) bool showsVolumeSlider;
@property (readonly) Class superclass;
@property (getter=isSuspended, nonatomic) bool suspended;
@property (nonatomic, readonly) double targetTime;
@property (nonatomic, retain) AVPlayerControllerTimeResolver *timeResolver;
@property (nonatomic, retain) MPVolumeController *volumeController;

+ (id)keyPathsForValuesAffectingActuallyCanSeek;
+ (id)keyPathsForValuesAffectingCurrentTime;
+ (id)keyPathsForValuesAffectingFullScreen;
+ (id)keyPathsForValuesAffectingIncludesFullScreenButton;
+ (id)keyPathsForValuesAffectingMaximumTime;
+ (id)keyPathsForValuesAffectingMinimumTime;
+ (id)keyPathsForValuesAffectingProminentPlayButtonCanShowPauseGlyph;
+ (id)keyPathsForValuesAffectingScrubberEnabled;
+ (id)keyPathsForValuesAffectingShouldEnterFullScreenWhenPlaybackBegins;
+ (id)keyPathsForValuesAffectingShowsMediaSelectionButton;
+ (id)keyPathsForValuesAffectingShowsProminentPlayButton;
+ (id)keyPathsForValuesAffectingShowsRoutePickerButton;
+ (id)keyPathsForValuesAffectingShowsSkipButtons;
+ (id)keyPathsForValuesAffectingShowsTransportControls;

- (void).cxx_destruct;
- (id)AVSystemControllerCurrentRouteHasVolumeControlDidChangeObserver;
- (id)MPVolumeViewRoutePickerPresentedNotificationObserver;
- (id)MPVolumeViewWirelessRoutesAvailableDidChangeNotificationObserver;
- (void)_bindInclusionOfControlItem:(id)arg1 toKeyPath:(id)arg2;
- (void)_observeBoolForKeyPath:(id)arg1 observationHandler:(id /* block */)arg2;
- (void)_seekByTimeInterval:(double)arg1 toleranceBefore:(double)arg2 toleranceAfter:(double)arg3;
- (void)_startOrStopHidingViewsQuicklyWhenPlaybackBegins;
- (void)_startVisibilityControllerManagementOfViewVisibilityHidingIfInitiallyPlaying:(bool)arg1;
- (void)_stopVisibilityControllerManagementOfViewVisibilityIfNeeded;
- (void)_updateScrubberAndTimeLabels;
- (void)_updateVolumeControlsShouldShowVolumeSliderIfPossible:(bool)arg1;
- (void)_updateVolumeControlsVisibility:(id /* block */)arg1;
- (id)_volumeButtonMicaPackageState;
- (bool)actuallyCanSeek;
- (bool)canExcludeProminentPlayButton;
- (bool)canHideInteractiveContentOverlayView;
- (double)currentTime;
- (void)dealloc;
- (id)elapsedTimeFormatter;
- (bool)entersFullScreenWhenPlaybackBegins;
- (float)estimatedFrameRate;
- (bool)hasPlaybackBegun;
- (bool)hasPlaybackBegunSinceEnteringInline;
- (bool)hasSeekableLiveStreamingContent;
- (bool)includesFullScreenButton;
- (id)initWithPlayerViewController:(id)arg1;
- (bool)isCoveringWindow;
- (bool)isFullScreen;
- (bool)isScrubberEnabled;
- (bool)isSuspended;
- (id)keyValueObservationController;
- (id)loadedTimeRanges;
- (double)maximumTime;
- (double)minimumTime;
- (bool)pickedRouteHasVolumeControl;
- (id)pictureInPictureController;
- (id)playbackControlsView;
- (void)playbackControlsViewDidLoad:(id)arg1;
- (void)playbackControlsVisibilityDidChange;
- (id)playerController;
- (id)playerViewController;
- (struct CGSize { double x1; double x2; })playerViewControllerContentViewContentDimensions;
- (id)playerViewControllerContentViewVideoGravity;
- (void)playerViewControllerContentViewWillLayoutSubviews:(id)arg1;
- (bool)playerViewControllerHasInvalidViewControllerHierarchy;
- (bool)playerViewControllerIsPresentedFullScreen;
- (bool)playerViewControllerIsPresentingFullScreen;
- (long long)preferredUnobscuredArea;
- (bool)prominentPlayButtonCanShowPauseGlyph;
- (id)remainingTimeFormatter;
- (bool)requiresLinearPlayback;
- (void)resumeUpdates;
- (id)routePickerAlertController;
- (void)routePickerButtonTapped:(id)arg1;
- (void)routePickerContainerViewControllerDidFinish:(id)arg1;
- (void)setAVSystemControllerCurrentRouteHasVolumeControlDidChangeObserver:(id)arg1;
- (void)setCanExcludeProminentPlayButton:(bool)arg1;
- (void)setCanHideInteractiveContentOverlayView:(bool)arg1;
- (void)setCoveringWindow:(bool)arg1;
- (void)setEntersFullScreenWhenPlaybackBegins:(bool)arg1;
- (void)setEstimatedFrameRate:(float)arg1;
- (void)setHasPlaybackBegun:(bool)arg1;
- (void)setHasPlaybackBegunSinceEnteringInline:(bool)arg1;
- (void)setHasSeekableLiveStreamingContent:(bool)arg1;
- (void)setLoadedTimeRanges:(id)arg1;
- (void)setMPVolumeViewRoutePickerPresentedNotificationObserver:(id)arg1;
- (void)setMPVolumeViewWirelessRoutesAvailableDidChangeNotificationObserver:(id)arg1;
- (void)setPickedRouteHasVolumeControl:(bool)arg1;
- (void)setPictureInPictureController:(id)arg1;
- (void)setPlaybackControlsView:(id)arg1;
- (void)setPlayerController:(id)arg1;
- (void)setPlayerViewControllerHasInvalidViewControllerHierarchy:(bool)arg1;
- (void)setPlayerViewControllerIsPresentedFullScreen:(bool)arg1;
- (void)setPlayerViewControllerIsPresentingFullScreen:(bool)arg1;
- (void)setPreferredUnobscuredArea:(long long)arg1;
- (void)setRequiresLinearPlayback:(bool)arg1;
- (void)setRoutePickerAlertController:(id)arg1;
- (void)setScrubberEnabled:(bool)arg1;
- (void)setShowsFullScreenButton:(bool)arg1;
- (void)setShowsLoadingIndicator:(bool)arg1;
- (void)setShowsPictureInPictureButton:(bool)arg1;
- (void)setShowsPlaybackControls:(bool)arg1;
- (void)setShowsVolumeSlider:(bool)arg1;
- (void)setSuspended:(bool)arg1;
- (void)setTimeResolver:(id)arg1;
- (void)setVolumeController:(id)arg1;
- (bool)shouldEnterFullScreenWhenPlaybackBegins;
- (bool)showsFullScreenButton;
- (bool)showsLoadingIndicator;
- (bool)showsMediaSelectionButton;
- (bool)showsPictureInPictureButton;
- (bool)showsPlaybackControls;
- (bool)showsProminentPlayButton;
- (bool)showsRoutePickerButton;
- (bool)showsSkipButtons;
- (bool)showsTransportControls;
- (bool)showsVolumeSlider;
- (void)skipButtonForcePressChanged:(id)arg1;
- (void)skipButtonLongPressEnded:(id)arg1;
- (void)skipButtonLongPressTriggered:(id)arg1;
- (void)skipButtonTouchUpInside:(id)arg1;
- (void)stopUpdates;
- (double)targetTime;
- (id)timeResolver;
- (void)toggleMutedButtonTapped:(id)arg1;
- (void)transportControls:(id)arg1 scrubberDidBeginScrubbing:(id)arg2;
- (void)transportControls:(id)arg1 scrubberDidEndScrubbing:(id)arg2;
- (void)transportControls:(id)arg1 scrubberDidScrub:(id)arg2;
- (void)transportControlsNeedsLayoutIfNeeded:(id)arg1;
- (void)volumeButtonLongPressed:(id)arg1;
- (id)volumeController;
- (void)volumeController:(id)arg1 volumeValueDidChange:(float)arg2;

@end
