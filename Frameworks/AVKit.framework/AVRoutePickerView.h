/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AVKit.framework/AVKit
 */

@interface AVRoutePickerView : UIView <UIPopoverPresentationControllerDelegate> {
    UIColor * _activeTintColor;
    bool  _airPlayActive;
    <AVRoutePickerViewDelegate> * _delegate;
    UIButton * _routePickerButton;
    bool  _routePickerButtonHidden;
    long long  _routePickerButtonStyle;
    AVRoutePickerViewController * _routePickerViewController;
}

@property (retain) UIColor *activeTintColor;
@property (readonly, copy) NSString *debugDescription;
@property <AVRoutePickerViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (getter=isRoutePickerButtonHidden, readonly) bool routePickerButtonHidden;
@property long long routePickerButtonStyle;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_createOrUpdateRoutePickerButton;
- (id)_defaultActiveTintColor;
- (void)_outputContextDevicesDidChange:(id)arg1;
- (void)_registerNotifications;
- (void)_routePickerButtonTapped:(id)arg1;
- (void)_unregisterNotifications;
- (id)activeTintColor;
- (long long)adaptivePresentationStyleForPresentationController:(id)arg1 traitCollection:(id)arg2;
- (void)dealloc;
- (id)delegate;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)isRoutePickerButtonHidden;
- (long long)routePickerButtonStyle;
- (void)setActiveTintColor:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setRoutePickerButtonStyle:(long long)arg1;

@end
