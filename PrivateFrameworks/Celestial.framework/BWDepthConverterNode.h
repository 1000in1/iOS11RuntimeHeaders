/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Celestial.framework/Celestial
 */

@interface BWDepthConverterNode : BWNode {
    int  _baseRotationDegrees;
    float  _baseline;
    NSDictionary * _cameraInfoByPortType;
    bool  _conversionAfterFilteringRequired;
    int  _depthAccuracy;
    int  _depthBufferFinalExifOrientation;
    int  _depthBufferOriginalExifOrientation;
    struct { 
        float forwardOrders[8]; 
        float inverseOrders[8]; 
    }  _depthLensDistortionBasePolynomial;
    struct { 
        float forwardOrders[8]; 
        float inverseOrders[8]; 
    }  _depthLensDistortionDynamicPolynomial;
    float  _depthPixelSizeInMicrons;
    <DepthProcessor> * _depthProcessor;
    struct __CVBuffer { } * _filteringInputBuffer;
    struct __CVBuffer { } * _filteringOutputBuffer;
    struct __CVBuffer { } * _filteringScaledYUVBuffer;
    struct __CVBuffer { } * _fixedPointRotatedIntermediateBuffer;
    struct __CVBuffer { } * _fixedPointScaledIntermediateBuffer;
    bool  _forceCPath;
    struct { 
        /* Warning: Unrecognized filer type: ']' using 'void*' */ void*columns[4]; 
    }  _identityExtrinsicMatrix;
    struct { 
        int width; 
        int height; 
    }  _inputDepthDimensions;
    bool  _mirroringEnabled;
    bool  _normalizedDisparityEnabled;
    struct { 
        int width; 
        int height; 
    }  _outputDimensions;
    unsigned int  _outputFormat;
    struct opaqueCMFormatDescription { } * _outputFormatDescription;
    int  _rotationDegrees;
    struct FigPhotoScaleAndRotateSession { } * _scaler;
    NSDictionary * _sensorIDDictionary;
    bool  _stillFilteringEnabled;
    bool  _streamingFilteringEnabled;
    struct __CVBuffer { } * _streamingFilteringScaledDepthInputBuffer;
    struct __CVBuffer { } * _streamingFilteringScaledDepthOutputBuffer;
}

+ (void)initialize;

- (int)_convertDepthDisparityToFloat_C:(struct __CVBuffer { }*)arg1 dst:(struct __CVBuffer { }*)arg2 options:(struct { unsigned int x1; float x2; float x3; unsigned int x4; }*)arg3;
- (int)_convertDepthDisparityToFloat_NEON:(struct __CVBuffer { }*)arg1 dst:(struct __CVBuffer { }*)arg2 options:(struct { unsigned int x1; float x2; float x3; unsigned int x4; }*)arg3;
- (int)_convertU16toFloatForImage_NEON:(struct __CVBuffer { }*)arg1 dst:(struct __CVBuffer { }*)arg2 options:(struct { unsigned int x1; float x2; float x3; unsigned int x4; }*)arg3;
- (id)_depthMetadataDictionaryFromDepthSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1 orientation:(unsigned int)arg2;
- (int)_loadAndConfigureDepthProcessorClass:(id)arg1;
- (void)_updateOutputRequirements;
- (int)_validateParametersWithInput:(struct opaqueCMSampleBuffer { }*)arg1 convertOptionsOut:(struct { unsigned int x1; float x2; float x3; unsigned int x4; }*)arg2;
- (int)baseRotationDegrees;
- (int)convertToFloatAndRotate:(struct opaqueCMSampleBuffer { }*)arg1 inputSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg2 outputPixelBuffer:(struct __CVBuffer { }*)arg3;
- (void)dealloc;
- (void)didSelectFormat:(id)arg1 forInput:(id)arg2 forAttachedMediaKey:(id)arg3;
- (int)filterBuffer:(struct __CVBuffer { }*)arg1 outputPixelBuffer:(struct __CVBuffer { }*)arg2 imageSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg3;
- (id)init;
- (id)initWithCameraInfoByPortType:(id)arg1 sensorIDDictionary:(id)arg2;
- (bool)mirroringEnabled;
- (id)nodeSubType;
- (id)nodeType;
- (struct { int x1; int x2; })outputDimensions;
- (unsigned int)outputFormat;
- (void)prepareForCurrentConfigurationToBecomeLive;
- (void)renderSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1 forInput:(id)arg2;
- (int)rotateAndScaleImagePixelBuffer:(struct __CVBuffer { }*)arg1 depthPixelBuffer:(struct __CVBuffer { }*)arg2 to:(struct __CVBuffer { }*)arg3 rotationAngle:(int)arg4 flip:(bool)arg5;
- (int)rotationDegrees;
- (void)setBaseRotationDegrees:(int)arg1;
- (void)setMirroringEnabled:(bool)arg1;
- (void)setOutputDimensions:(struct { int x1; int x2; })arg1;
- (void)setOutputFormat:(unsigned int)arg1;
- (void)setRotationDegrees:(int)arg1;
- (void)setStillFilteringEnabled:(bool)arg1;
- (void)setStreamingFilteringEnabled:(bool)arg1;
- (bool)stillFilteringEnabled;
- (bool)streamingFilteringEnabled;

@end
