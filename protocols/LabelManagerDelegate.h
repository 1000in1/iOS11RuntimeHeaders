/* Generated by RuntimeBrowser.
 */

@protocol LabelManagerDelegate <NSObject>

@required

- (void)labelManager:(void *)arg1 pendingArtworkIsReady:(void *)arg2; // needs 2 arg types, found 13: struct LabelManager { int (**x1)(); struct weak_ptr<md::LabelManager> { struct LabelManager {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; struct shared_ptr<md::TaskContext> { struct TaskContext {} *x_3_1_1; struct __shared_weak_count {} *x_3_1_2; } x3; id x4; unsigned long long x5; unsigned char x6; long long x7; unsigned char x8; unsigned char x9; bool x10; bool x11; bool x12; bool x13; bool x14; bool x15; bool x16; bool x17; bool x18; bool x19; bool x20; bool x21; bool x22; bool x23; bool x24; bool x25; bool x26; bool x27; bool x28; bool x29; bool x30; bool x31; bool x32; bool x33; struct atomic<bool> { bool x_34_1_1; } x34; bool x35; bool x36; bool x37; bool x38; bool x39; bool x40; bool x41; bool x42; bool x43; bool x44; bool x45; bool x46; bool x47; bool x48; struct Box<unsigned int, 2> { struct Matrix<unsigned int, 2, 1> { unsigned int x_1_2_1[2]; } x_49_1_1; struct Matrix<unsigned int, 2, 1> { unsigned int x_2_2_1[2]; } x_49_1_2; } x49; struct Box<unsigned int, 2> { struct Matrix<unsigned int, 2, 1> { unsigned int x_1_2_1[2]; } x_50_1_1; struct Matrix<unsigned int, 2, 1> { unsigned int x_2_2_1[2]; } x_50_1_2; } x50; }*, struct _retain_ptr<VKLabelManagerCollisionTimer *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> { int (**x1)(); id x2; void*x3; const void*x4; void*x5; void*x6; int x7; in void*x8; out unsigned int x9/* : ? */; void*x10; BOOL x11; void*x12; }, struct _release_objc { }, void*, struct _retain_ptr<VKClientLocalizedStrings *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> { int (**x1)(); id x2; void*x3; const void*x4; void*x5; void*x6; int x7; in void*x8; out unsigned int x9/* : ? */; void*x10; BOOL x11; void*x12; }, struct _release_objc { }, void*, struct { struct shared_ptr<gss::StylesheetManager<gss::PropertyID> > { struct StylesheetManager<gss::PropertyID> {} *x_1_1_1; struct __shared_weak_count {} *x_1_1_2; } x1; struct shared_ptr<md::LabelMarker> { struct LabelMarker {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; bool x3; }, bool, float, struct vector<std::__1::shared_ptr<md::NavLabel>, std::__1::allocator<std::__1::shared_ptr<md::NavLabel> > > { struct shared_ptr<md::NavLabel> {} *x1; struct shared_ptr<md::NavLabel> {} *x2; struct __compressed_pair<std::__1::shared_ptr<md::NavLabel> *, std::__1::allocator<std::__1::shared_ptr<md::NavLabel> > > { struct shared_ptr<md::NavLabel> {} *x_3_1_1; } x3; }, void*, bool
- (void)labelManager:(void *)arg1 selectedLabelMarkerDidChangeState:(void *)arg2; // needs 2 arg types, found 13: struct LabelManager { int (**x1)(); struct weak_ptr<md::LabelManager> { struct LabelManager {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; struct shared_ptr<md::TaskContext> { struct TaskContext {} *x_3_1_1; struct __shared_weak_count {} *x_3_1_2; } x3; id x4; unsigned long long x5; unsigned char x6; long long x7; unsigned char x8; unsigned char x9; bool x10; bool x11; bool x12; bool x13; bool x14; bool x15; bool x16; bool x17; bool x18; bool x19; bool x20; bool x21; bool x22; bool x23; bool x24; bool x25; bool x26; bool x27; bool x28; bool x29; bool x30; bool x31; bool x32; bool x33; struct atomic<bool> { bool x_34_1_1; } x34; bool x35; bool x36; bool x37; bool x38; bool x39; bool x40; bool x41; bool x42; bool x43; bool x44; bool x45; bool x46; bool x47; bool x48; struct Box<unsigned int, 2> { struct Matrix<unsigned int, 2, 1> { unsigned int x_1_2_1[2]; } x_49_1_1; struct Matrix<unsigned int, 2, 1> { unsigned int x_2_2_1[2]; } x_49_1_2; } x49; struct Box<unsigned int, 2> { struct Matrix<unsigned int, 2, 1> { unsigned int x_1_2_1[2]; } x_50_1_1; struct Matrix<unsigned int, 2, 1> { unsigned int x_2_2_1[2]; } x_50_1_2; } x50; }*, struct _retain_ptr<VKLabelManagerCollisionTimer *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> { int (**x1)(); id x2; void*x3; const void*x4; void*x5; void*x6; int x7; in void*x8; out unsigned int x9/* : ? */; void*x10; BOOL x11; void*x12; }, struct _release_objc { }, void*, struct _retain_ptr<VKClientLocalizedStrings *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> { int (**x1)(); id x2; void*x3; const void*x4; void*x5; void*x6; int x7; in void*x8; out unsigned int x9/* : ? */; void*x10; BOOL x11; void*x12; }, struct _release_objc { }, void*, struct { struct shared_ptr<gss::StylesheetManager<gss::PropertyID> > { struct StylesheetManager<gss::PropertyID> {} *x_1_1_1; struct __shared_weak_count {} *x_1_1_2; } x1; struct shared_ptr<md::LabelMarker> { struct LabelMarker {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; bool x3; }, bool, float, struct vector<std::__1::shared_ptr<md::NavLabel>, std::__1::allocator<std::__1::shared_ptr<md::NavLabel> > > { struct shared_ptr<md::NavLabel> {} *x1; struct shared_ptr<md::NavLabel> {} *x2; struct __compressed_pair<std::__1::shared_ptr<md::NavLabel> *, std::__1::allocator<std::__1::shared_ptr<md::NavLabel> > > { struct shared_ptr<md::NavLabel> {} *x_3_1_1; } x3; }, void*, const struct shared_ptr<md::LabelMarker> { struct LabelMarker {} *x1; struct __shared_weak_count {} *x2; }*
- (void)labelManager:(void *)arg1 selectedLabelMarkerWillDisappear:(void *)arg2; // needs 2 arg types, found 13: struct LabelManager { int (**x1)(); struct weak_ptr<md::LabelManager> { struct LabelManager {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; struct shared_ptr<md::TaskContext> { struct TaskContext {} *x_3_1_1; struct __shared_weak_count {} *x_3_1_2; } x3; id x4; unsigned long long x5; unsigned char x6; long long x7; unsigned char x8; unsigned char x9; bool x10; bool x11; bool x12; bool x13; bool x14; bool x15; bool x16; bool x17; bool x18; bool x19; bool x20; bool x21; bool x22; bool x23; bool x24; bool x25; bool x26; bool x27; bool x28; bool x29; bool x30; bool x31; bool x32; bool x33; struct atomic<bool> { bool x_34_1_1; } x34; bool x35; bool x36; bool x37; bool x38; bool x39; bool x40; bool x41; bool x42; bool x43; bool x44; bool x45; bool x46; bool x47; bool x48; struct Box<unsigned int, 2> { struct Matrix<unsigned int, 2, 1> { unsigned int x_1_2_1[2]; } x_49_1_1; struct Matrix<unsigned int, 2, 1> { unsigned int x_2_2_1[2]; } x_49_1_2; } x49; struct Box<unsigned int, 2> { struct Matrix<unsigned int, 2, 1> { unsigned int x_1_2_1[2]; } x_50_1_1; struct Matrix<unsigned int, 2, 1> { unsigned int x_2_2_1[2]; } x_50_1_2; } x50; }*, struct _retain_ptr<VKLabelManagerCollisionTimer *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> { int (**x1)(); id x2; void*x3; const void*x4; void*x5; void*x6; int x7; in void*x8; out unsigned int x9/* : ? */; void*x10; BOOL x11; void*x12; }, struct _release_objc { }, void*, struct _retain_ptr<VKClientLocalizedStrings *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> { int (**x1)(); id x2; void*x3; const void*x4; void*x5; void*x6; int x7; in void*x8; out unsigned int x9/* : ? */; void*x10; BOOL x11; void*x12; }, struct _release_objc { }, void*, struct { struct shared_ptr<gss::StylesheetManager<gss::PropertyID> > { struct StylesheetManager<gss::PropertyID> {} *x_1_1_1; struct __shared_weak_count {} *x_1_1_2; } x1; struct shared_ptr<md::LabelMarker> { struct LabelMarker {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; bool x3; }, bool, float, struct vector<std::__1::shared_ptr<md::NavLabel>, std::__1::allocator<std::__1::shared_ptr<md::NavLabel> > > { struct shared_ptr<md::NavLabel> {} *x1; struct shared_ptr<md::NavLabel> {} *x2; struct __compressed_pair<std::__1::shared_ptr<md::NavLabel> *, std::__1::allocator<std::__1::shared_ptr<md::NavLabel> > > { struct shared_ptr<md::NavLabel> {} *x_3_1_1; } x3; }, void*, const struct shared_ptr<md::LabelMarker> { struct LabelMarker {} *x1; struct __shared_weak_count {} *x2; }*
- (void)labelManager:(void *)arg1 setNeedsDisplay:(void *)arg2; // needs 2 arg types, found 13: struct LabelManager { int (**x1)(); struct weak_ptr<md::LabelManager> { struct LabelManager {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; struct shared_ptr<md::TaskContext> { struct TaskContext {} *x_3_1_1; struct __shared_weak_count {} *x_3_1_2; } x3; id x4; unsigned long long x5; unsigned char x6; long long x7; unsigned char x8; unsigned char x9; bool x10; bool x11; bool x12; bool x13; bool x14; bool x15; bool x16; bool x17; bool x18; bool x19; bool x20; bool x21; bool x22; bool x23; bool x24; bool x25; bool x26; bool x27; bool x28; bool x29; bool x30; bool x31; bool x32; bool x33; struct atomic<bool> { bool x_34_1_1; } x34; bool x35; bool x36; bool x37; bool x38; bool x39; bool x40; bool x41; bool x42; bool x43; bool x44; bool x45; bool x46; bool x47; bool x48; struct Box<unsigned int, 2> { struct Matrix<unsigned int, 2, 1> { unsigned int x_1_2_1[2]; } x_49_1_1; struct Matrix<unsigned int, 2, 1> { unsigned int x_2_2_1[2]; } x_49_1_2; } x49; struct Box<unsigned int, 2> { struct Matrix<unsigned int, 2, 1> { unsigned int x_1_2_1[2]; } x_50_1_1; struct Matrix<unsigned int, 2, 1> { unsigned int x_2_2_1[2]; } x_50_1_2; } x50; }*, struct _retain_ptr<VKLabelManagerCollisionTimer *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> { int (**x1)(); id x2; void*x3; const void*x4; void*x5; void*x6; int x7; in void*x8; out unsigned int x9/* : ? */; void*x10; BOOL x11; void*x12; }, struct _release_objc { }, void*, struct _retain_ptr<VKClientLocalizedStrings *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> { int (**x1)(); id x2; void*x3; const void*x4; void*x5; void*x6; int x7; in void*x8; out unsigned int x9/* : ? */; void*x10; BOOL x11; void*x12; }, struct _release_objc { }, void*, struct { struct shared_ptr<gss::StylesheetManager<gss::PropertyID> > { struct StylesheetManager<gss::PropertyID> {} *x_1_1_1; struct __shared_weak_count {} *x_1_1_2; } x1; struct shared_ptr<md::LabelMarker> { struct LabelMarker {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; bool x3; }, bool, float, struct vector<std::__1::shared_ptr<md::NavLabel>, std::__1::allocator<std::__1::shared_ptr<md::NavLabel> > > { struct shared_ptr<md::NavLabel> {} *x1; struct shared_ptr<md::NavLabel> {} *x2; struct __compressed_pair<std::__1::shared_ptr<md::NavLabel> *, std::__1::allocator<std::__1::shared_ptr<md::NavLabel> > > { struct shared_ptr<md::NavLabel> {} *x_3_1_1; } x3; }, void*, bool
- (void)labelManager:(void *)arg1 setNeedsLayout:(void *)arg2; // needs 2 arg types, found 13: struct LabelManager { int (**x1)(); struct weak_ptr<md::LabelManager> { struct LabelManager {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; struct shared_ptr<md::TaskContext> { struct TaskContext {} *x_3_1_1; struct __shared_weak_count {} *x_3_1_2; } x3; id x4; unsigned long long x5; unsigned char x6; long long x7; unsigned char x8; unsigned char x9; bool x10; bool x11; bool x12; bool x13; bool x14; bool x15; bool x16; bool x17; bool x18; bool x19; bool x20; bool x21; bool x22; bool x23; bool x24; bool x25; bool x26; bool x27; bool x28; bool x29; bool x30; bool x31; bool x32; bool x33; struct atomic<bool> { bool x_34_1_1; } x34; bool x35; bool x36; bool x37; bool x38; bool x39; bool x40; bool x41; bool x42; bool x43; bool x44; bool x45; bool x46; bool x47; bool x48; struct Box<unsigned int, 2> { struct Matrix<unsigned int, 2, 1> { unsigned int x_1_2_1[2]; } x_49_1_1; struct Matrix<unsigned int, 2, 1> { unsigned int x_2_2_1[2]; } x_49_1_2; } x49; struct Box<unsigned int, 2> { struct Matrix<unsigned int, 2, 1> { unsigned int x_1_2_1[2]; } x_50_1_1; struct Matrix<unsigned int, 2, 1> { unsigned int x_2_2_1[2]; } x_50_1_2; } x50; }*, struct _retain_ptr<VKLabelManagerCollisionTimer *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> { int (**x1)(); id x2; void*x3; const void*x4; void*x5; void*x6; int x7; in void*x8; out unsigned int x9/* : ? */; void*x10; BOOL x11; void*x12; }, struct _release_objc { }, void*, struct _retain_ptr<VKClientLocalizedStrings *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> { int (**x1)(); id x2; void*x3; const void*x4; void*x5; void*x6; int x7; in void*x8; out unsigned int x9/* : ? */; void*x10; BOOL x11; void*x12; }, struct _release_objc { }, void*, struct { struct shared_ptr<gss::StylesheetManager<gss::PropertyID> > { struct StylesheetManager<gss::PropertyID> {} *x_1_1_1; struct __shared_weak_count {} *x_1_1_2; } x1; struct shared_ptr<md::LabelMarker> { struct LabelMarker {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; bool x3; }, bool, float, struct vector<std::__1::shared_ptr<md::NavLabel>, std::__1::allocator<std::__1::shared_ptr<md::NavLabel> > > { struct shared_ptr<md::NavLabel> {} *x1; struct shared_ptr<md::NavLabel> {} *x2; struct __compressed_pair<std::__1::shared_ptr<md::NavLabel> *, std::__1::allocator<std::__1::shared_ptr<md::NavLabel> > > { struct shared_ptr<md::NavLabel> {} *x_3_1_1; } x3; }, void*, bool
- (void)labelManagerDidLayout:(void *)arg1; // needs 1 arg types, found 12: struct LabelManager { int (**x1)(); struct weak_ptr<md::LabelManager> { struct LabelManager {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; struct shared_ptr<md::TaskContext> { struct TaskContext {} *x_3_1_1; struct __shared_weak_count {} *x_3_1_2; } x3; id x4; unsigned long long x5; unsigned char x6; long long x7; unsigned char x8; unsigned char x9; bool x10; bool x11; bool x12; bool x13; bool x14; bool x15; bool x16; bool x17; bool x18; bool x19; bool x20; bool x21; bool x22; bool x23; bool x24; bool x25; bool x26; bool x27; bool x28; bool x29; bool x30; bool x31; bool x32; bool x33; struct atomic<bool> { bool x_34_1_1; } x34; bool x35; bool x36; bool x37; bool x38; bool x39; bool x40; bool x41; bool x42; bool x43; bool x44; bool x45; bool x46; bool x47; bool x48; struct Box<unsigned int, 2> { struct Matrix<unsigned int, 2, 1> { unsigned int x_1_2_1[2]; } x_49_1_1; struct Matrix<unsigned int, 2, 1> { unsigned int x_2_2_1[2]; } x_49_1_2; } x49; struct Box<unsigned int, 2> { struct Matrix<unsigned int, 2, 1> { unsigned int x_1_2_1[2]; } x_50_1_1; struct Matrix<unsigned int, 2, 1> { unsigned int x_2_2_1[2]; } x_50_1_2; } x50; }*, struct _retain_ptr<VKLabelManagerCollisionTimer *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> { int (**x1)(); id x2; void*x3; const void*x4; void*x5; void*x6; int x7; in void*x8; out unsigned int x9/* : ? */; void*x10; BOOL x11; void*x12; }, struct _release_objc { }, void*, struct _retain_ptr<VKClientLocalizedStrings *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> { int (**x1)(); id x2; void*x3; const void*x4; void*x5; void*x6; int x7; in void*x8; out unsigned int x9/* : ? */; void*x10; BOOL x11; void*x12; }, struct _release_objc { }, void*, struct { struct shared_ptr<gss::StylesheetManager<gss::PropertyID> > { struct StylesheetManager<gss::PropertyID> {} *x_1_1_1; struct __shared_weak_count {} *x_1_1_2; } x1; struct shared_ptr<md::LabelMarker> { struct LabelMarker {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; bool x3; }, bool, float, struct vector<std::__1::shared_ptr<md::NavLabel>, std::__1::allocator<std::__1::shared_ptr<md::NavLabel> > > { struct shared_ptr<md::NavLabel> {} *x1; struct shared_ptr<md::NavLabel> {} *x2; struct __compressed_pair<std::__1::shared_ptr<md::NavLabel> *, std::__1::allocator<std::__1::shared_ptr<md::NavLabel> > > { struct shared_ptr<md::NavLabel> {} *x_3_1_1; } x3; }, void*

@end
